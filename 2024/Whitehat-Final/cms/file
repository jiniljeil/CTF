assets/lib/components-font-awesome/fonts/fontawesome-webfont.svg: <glyph glyph-name="file_alt" unicode="&#xf016;"
assets/lib/components-font-awesome/fonts/fontawesome-webfont.svg: <glyph glyph-name="file_text_alt" unicode="&#xf0f6;"
assets/lib/components-font-awesome/fonts/fontawesome-webfont.svg: <glyph glyph-name="file" unicode="&#xf15b;"
assets/lib/components-font-awesome/fonts/fontawesome-webfont.svg: <glyph glyph-name="file_text" unicode="&#xf15c;"
Binary file assets/lib/components-font-awesome/fonts/FontAwesome.otf matches Binary file assets/lib/components-font-awesome/fonts/fontawesome-webfont.ttf matches Binary file assets/lib/components-font-awesome/fonts/fontawesome-webfont.eot matches assets/lib/jquery.mb.ytplayer/dist/jquery.mb.YTPlayer.js: _ file: jquery.mb.YTPlayer.src.js _ assets/lib/jquery.mb.ytplayer/dist/jquery.mb.YTPlayer.js: * file: jquery.mb.CSSAnimate.min.js assets/lib/jquery.mb.ytplayer/dist/jquery.mb.YTPlayer.js: _ file: jquery.mb.browser.min.js _ assets/lib/jquery.mb.ytplayer/dist/jquery.mb.YTPlayer.js: _ file: jquery.mb.simpleSlider.min.js _ assets/lib/jquery.mb.ytplayer/dist/jquery.mb.YTPlayer.js: _ file: jquery.mb.storage.min.js _ board/create.php: // var fileInput = document.getElementById('file'); // 파일 input 요소 가져오기
board/create.php: // if (fileInput.files.length > 0) {
board/create.php: //     formData.append('file', fileInput.files[0]); // 첫 번째 파일 추가
board/edit.php: let filepath='';

board/edit.php: if (post.filepath !=null) {
    board/edit.php: filepath=`<div class="post-thumbnail"><a href="#"><img src="${post.filepath}" alt="Blog-post Thumbnail" /></a></div>`;

    board/edit.php: $ {
        filepath
    }

    head.html: < !-- Main stylesheet and color file-->nav.html: <li><a href="/users/profile.php">Profile</a>nav.html: <li><a href="/users/edit.php">Profile Edit </a>startdb.sh: filepath VARCHAR(100) DEFAULT ''

    startdb.sh: filepath VARCHAR(100) startdb.sh: filepath VARCHAR(100) startdb.sh: filepath VARCHAR(100) users/profileapi.php: if(file_exists($row['filepath'])) {
        # TARGET users/profileapi.php: $imgpath='/uploads/' .basename($row['filepath']);

        users/profileapi.php: 'filepath'=>$imgpath users/editapi.php:if( !empty($_FILES) && isset($_FILES['file']) && $_FILES['file']['error']===UPLOAD_ERR_OK) {
            users/editapi.php: $filename=filefunc();

            users/editapi.php: if($filename===null) {
                users/editapi.php: $row2=updateUserImg($dbcon, $idx, $filename);

                users/sql.php:function updateUserImg($con, $idx, $filepath) {
                    users/sql.php: $sql ="UPDATE $TABLE_NAME SET filepath='$filepath' WHERE idx='$idx'";
                    users/profile.php: url: '/users/profileapi.php',
                        users/profile.php: let filepath='';

                    users/profile.php: if(post.filepath !=null) {
                        users/profile.php: filepath=`<div class="thumbnail"><a href="#"><img src="${post.filepath}" alt="Blog-post Thumbnail" /></a></div>`;

                        users/profile.php: $ {
                            filepath
                        }

                        users/edit.php: fetch(`/users/profileapi.php`) users/edit.php: let filepath='';

                        users/edit.php: if (post.filepath !=null) {
                            users/edit.php: filepath=`<div class="post-thumbnail"><a href="#"><img src="${post.filepath}" alt="Blog-post Thumbnail" /></a></div>`;

                            users/edit.php: $ {
                                filepath
                            }

                            users/edit.php: <input class="form-control" type="text" placeholder="Profile Modify" readonly="" />users/edit.php: <input type="file" id="file" name="file">users/edit.php: var fileInput=document.getElementById('file'); // 파일 input 요소 가져오기

                            users/edit.php: if (fileInput.files.length > 0) {
                                users/edit.php: formData.append('file', fileInput.files[0]); // 첫 번째 파일 추가
                                users/common.php: require_once("../util/filefunc.php");

                                util/filefunc.php:function filefunc() {
                                    util/filefunc.php: $file_name =basename($_FILES["file"]["name"]);

                                    util/filefunc.php: if (strpos($file_name, '..') !==false) {
                                        util/filefunc.php: $target_file =$target_dir . $file_name;
                                        util/filefunc.php: $imageFileType =strtolower(pathinfo($target_file, PATHINFO_EXTENSION));
                                        util/filefunc.php: $check =getimagesize($_FILES["file"]["tmp_name"]);

                                        util/filefunc.php: if ($_FILES["file"]["size"] > 5000000) {
                                            util/filefunc.php: // if (mime_content_type($tmpFile) !== "image/gif" || $fileExtension !== "gif") {
                                            util/filefunc.php: //     echo "Sorry, only JPG, JPEG, PNG, GIF files are allowed.";
                                                util/filefunc.php: // echo "Sorry, your file was not uploaded.";

                                                util/filefunc.php: if (move_uploaded_file($_FILES["file"]["tmp_name"], $newFileName)) {
                                                util/filefunc.php: // echo "The file ". htmlspecialchars( basename( $_FILES["file"]["name"])). " has been uploaded.";
                                                    util/filefunc.php: // echo "Sorry, there was an error uploading your file.";

                                                    util/fileclass.php: public function upload($file) {
                                                    util/fileclass.php: $fileName =basename($file["name"]);

                                                    util/fileclass.php: if (strpos($fileName, '..') !==false) {
                                                        util/fileclass.php: $targetFile =$this->targetDir . $fileName;
                                                        util/fileclass.php: // Check if the file is an image
                                                            util/fileclass.php: $check =getimagesize($file["tmp_name"]);
                                                        util/fileclass.php: // Check file size

                                                        util/fileclass.php: if ($file["size"] > 5000000) {
                                                            util/fileclass.php: // Check allowed file types
                                                            util/fileclass.php: // Generate a unique file name

                                                            util/fileclass.php: if (move_uploaded_file($file["tmp_name"], $newFileName)) {
                                                                util/fileclass.php: return false; // Error uploading file
                                                                util/fileclass.php: // $result = $uploader->upload($_FILES["file"]);
                                                                    util/curl.php: public $ch, $url, $method, $location, $data, $upfile;

                                                                util/curl.php: public function post($data =[], $locations =[], $upfile='') {
                                                                    util/curl.php: if ( !empty($upfile)) {
                                                                        util/curl.php: $file =new CURLFile($upfile);
                                                                        util/curl.php: $data['file']=$file;

                                                                        util/curl.php: public function __construct($url='', $method="GET", $location=[], $data=[], $upfile='') {
                                                                            util/curl.php: $this->post($data, $location, $upfile);
                                                                            util/curl.php: $this->get($data, $location, $upfile);